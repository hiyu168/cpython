# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-test-run:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Install python3-venv to avoid the 'ensurepip is not available' error
      - run:
          name: Install python3-venv
          command: |
            sudo apt-get update && sudo apt-get install -y python3-venv
      - run:
          name: Install Dependencies
          command: |
            python -m venv env
            . env/bin/activate
            pip install -r requirements.txt
      - run:
          name: Run Tests
          command: |
            . env/bin/activate
            pytest tests/
      - persist_to_workspace:
          root: .
          paths:
            - . 
  deploy:
    docker:
      - image: circleci/python:3.9
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploy
          command: |
            mkdir -p DEPLOY-$(date +%F)
            rsync -av --exclude "DEPLOY-$(date +%F)" ./ DEPLOY-$(date +%F)           - .

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-test-run
      - deploy:
          requires:
            - build-test-run
